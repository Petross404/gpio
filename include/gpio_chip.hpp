////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2018 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#ifndef GPIO_CHIP_HPP
#define GPIO_CHIP_HPP

////////////////////////////////////////////////////////////////////////////////
#include <gpio_pin.hpp>
#include <memory>
#include <string>
#include <vector>

////////////////////////////////////////////////////////////////////////////////
namespace gpio
{

////////////////////////////////////////////////////////////////////////////////
struct chip
{
    ////////////////////
    auto const& name() const { return name_; }

protected:
    ////////////////////
    std::string name_;

    using pin_ptr = std::unique_ptr<gpio::pin>;
    std::vector<pin_ptr> pins_;
};

////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////
extern "C" gpio::chip* create_chip(const char*);
extern "C" void delete_chip(gpio::chip*);

////////////////////////////////////////////////////////////////////////////////
#endif
