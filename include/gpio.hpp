////////////////////////////////////////////////////////////////////////////////
// Copyright (c) 2018 Dimitry Ishenko
// Contact: dimitry (dot) ishenko (at) (gee) mail (dot) com
//
// Distributed under the GNU GPL license. See the LICENSE.md file for details.

////////////////////////////////////////////////////////////////////////////////
#ifndef GPIO_HPP
#define GPIO_HPP

////////////////////////////////////////////////////////////////////////////////
#include <gpio_chip.hpp>
#include <gpio_pin.hpp>

#include <memory>
#include <string>

////////////////////////////////////////////////////////////////////////////////
namespace gpio
{

////////////////////////////////////////////////////////////////////////////////
using shared_lib = std::shared_ptr<void>;

////////////////////////////////////////////////////////////////////////////////
struct chip_deleter
{
    shared_lib handle;
    void operator()(chip*);
};

using unique_chip = std::unique_ptr<chip, chip_deleter>;

unique_chip create_chip(std::string name);

////////////////////////////////////////////////////////////////////////////////
}

////////////////////////////////////////////////////////////////////////////////
#endif
